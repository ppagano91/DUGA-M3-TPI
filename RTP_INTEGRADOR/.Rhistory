labelOptions = labelOptions(noHide = TRUE,
textOnly = TRUE,
direction = "top",
textsize = "24px",
offset = c(0,5)))
# Paso 1: convertir interpolación a raster
r_interp <- raster(list(x = interp_ppt$x,
y = interp_ppt$y,
z = interp_ppt$z))
# Paso 2: paleta de colores
pal <- colorNumeric(palette = "YlGnBu", domain = values(r_interp), na.color = "transparent")
# Paso 3: mapa leaflet
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%  # mapa base
addRasterImage(r_interp, colors = pal, opacity = 0.5) %>%  # capa interpolada
addLegend(pal = pal, values = values(r_interp),
title = "Precipitaciones (mm/año)") %>%
# Puntos con popup
addCircleMarkers(data = df,
lng = ~Longitud, lat = ~Latitud,
radius = 3, color = "black", fill = TRUE,
popup = ~paste0(
"Localidad: ", Localidad, "<br>",
"Precipitaciones: ", Precipitaciones, " mm"
)) %>%
# Etiquetas visibles
addLabelOnlyMarkers(data = df,
lng = ~Longitud, lat = ~Latitud,
label = ~Localidad,
labelOptions = labelOptions(noHide = TRUE,
textOnly = TRUE,
direction = "top",
textsize = "20px",
offset = c(0,5)))
r_interp <- raster(list(x = interp_ppt$x,
y = interp_ppt$y,
z = interp_ppt$z))
# Paso 2: paleta de colores
pal <- colorNumeric(palette = "YlGnBu", domain = values(r_interp), na.color = "transparent")
# Paso 3: mapa leaflet
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%  # mapa base
addRasterImage(r_interp, colors = pal, opacity = 0.5) %>%  # capa interpolada
addLegend(pal = pal, values = values(r_interp),
title = "Precipitaciones (mm/año)") %>%
# Puntos con popup
addCircleMarkers(data = df,
lng = ~Longitud, lat = ~Latitud,
radius = 3, color = "black", fill = TRUE,
popup = ~paste0(
"Localidad: ", Localidad, "<br>",
"Precipitaciones: ", Precipitaciones, " mm"
)) %>%
# Etiquetas visibles
addLabelOnlyMarkers(data = df,
lng = ~Longitud, lat = ~Latitud,
label = ~Localidad,
labelOptions = labelOptions(noHide = TRUE,
textOnly = TRUE,
direction = "top",
textsize = "12px",
offset = c(0,5)))
library(gridExtra)
# Exportás el filled.contour en un objeto
png("mapa_contour.png", width=800, height=600)
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = FALSE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
dev.off()
# El leaflet lo podés capturar con webshot
library(htmlwidgets)
library(webshot2)
r_interp <- raster(list(x = interp_ppt$x,
y = interp_ppt$y,
z = interp_ppt$z))
# Paso 2: paleta de colores
pal <- colorNumeric(palette = "YlGnBu", domain = values(r_interp), na.color = "transparent")
# Paso 3: mapa leaflet
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%  # mapa base
addRasterImage(r_interp, colors = pal, opacity = 0.5) %>%  # capa interpolada
addLegend(pal = pal, values = values(r_interp),
title = "Precipitaciones (mm/año)") %>%
# Puntos con popup
addCircleMarkers(data = df,
lng = ~Longitud, lat = ~Latitud,
radius = 2, color = "black", fill = TRUE,
popup = ~paste0(
"Localidad: ", Localidad, "<br>",
"Precipitaciones: ", Precipitaciones, " mm"
)) %>%
# Etiquetas visibles
addLabelOnlyMarkers(data = df,
lng = ~Longitud, lat = ~Latitud,
label = ~Localidad,
labelOptions = labelOptions(noHide = TRUE,
textOnly = TRUE,
direction = "top",
textsize = "12px",
offset = c(0,5)))
# ---- Estadística descriptiva de Precipitaciones ----
library(readxl)
library(ggplot2)
library(akima)
library(RColorBrewer)
library(geoR)
# install.packages("scatterplot3d")
library(scatterplot3d)
# install.packages("rgl")
library(rgl)
# install.packages("plotly")
library(plotly)
library(car)
library(fBasics)
library(sf)
library(gstat)
library(sp)
library(gridExtra)
library(geoR)
library(gstat)
library(leaflet)
library(sf)
library(raster)
# 1) Cargar datos
df <- read_excel("data/Precipitaciones.xlsx", sheet = 1)
# View(df)
summary(df)
names(df) <- trimws(names(df))
# 2) Limpiar NAs en la variable de interés
df <- df[!is.na(df$Precipitaciones), ]
# 3) Estadísticos básicos
prec <- df$Precipitaciones
n <- length(prec)
min_val <- min(prec)
max_val <- max(prec)
mean_val <- mean(prec)
median_val <- median(prec)
sd_val <- sd(prec)
var_val <- var(prec)
range_val <- max_val - min_val
# ¿Cuál es el promedio de precipitación anual? ¿Cómo se compara este resultado con promedios históricos o bibliografía específica de la región?
cat("Cantidad de registros:", n, "\n")
cat("Mínimo:", round(min_val,2), "\n")
cat("Máximo:", round(max_val,2), "\n")
cat("Promedio:", round(mean_val,2), "\n")
cat("Mediana:", round(median_val,2), "\n")
# ¿Cómo es la dispersión o varianza de la precipitación? ¿Existe una gran variabilidad en los valores registrados?
cat("Desvío estándar:", round(sd_val,2), "\n")
cat("Varianza:", round(var_val,2), "\n")
cat("Rango:", round(range_val,2), "\n")
par(mfrow = c(1,2))
# ¿Cuál es el rango de valores de precipitación más frecuente en la región?
hist(df$Precipitaciones,
probability = TRUE,
main = "Histograma",
xlab = "Precipitación (mm/año)",
ylab = "Frecuencia",
col = "lightblue",
border = "white")
lines(density(df$Precipitaciones, na.rm = TRUE),
col = "red", lwd = 2)
# Los valores de precipitación más frecuentes se encuentran en dos rangos: 1) entre 200 y 400 mm/año; 2) 600 y 800 mm/año; tal como se observa en el histograma
h <- hist(df$Precipitaciones, breaks = 10, plot =  FALSE)
moda_aprox <- h$mids[which.max(h$counts)]
moda_aprox
boxplot(df$Precipitaciones,
main = "Diagrama de Caja",
ylab = "Precipitación (mm/año)",
col = "lightblue")
par(mfrow = c(1,1))
interp_ppt <- interp(x = df$Longitud,
y = df$Latitud,
z = df$Precipitaciones,
duplicate = "mean",
nx = 100, ny = 100)  # resolución
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar de Precipitaciones (mm/año)",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = FALSE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
# Paso 1: convertir interpolación a raster
r_interp <- raster(list(x = interp_ppt$x,
y = interp_ppt$y,
z = interp_ppt$z))
# Paso 2: paleta de colores
pal <- colorNumeric(palette = "YlGnBu", domain = values(r_interp), na.color = "transparent")
# Paso 3: mapa leaflet
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%  # mapa base
addRasterImage(r_interp, colors = pal, opacity = 0.5) %>%  # capa interpolada
addLegend(pal = pal, values = values(r_interp),
title = "Precipitaciones (mm/año)") %>%
# Puntos con popup
addCircleMarkers(data = df,
lng = ~Longitud, lat = ~Latitud,
radius = 2, color = "black", fill = TRUE,
popup = ~paste0(
"Localidad: ", Localidad, "<br>",
"Precipitaciones: ", Precipitaciones, " mm"
)) %>%
# Etiquetas visibles
addLabelOnlyMarkers(data = df,
lng = ~Longitud, lat = ~Latitud,
label = ~Localidad,
labelOptions = labelOptions(noHide = TRUE,
textOnly = TRUE,
direction = "top",
textsize = "12px",
offset = c(0,5)))
df_geodata <- as.geodata(df, coords.col = c("Longitud", "Latitud"), data.col = "Precipitaciones")
duplicated(df_geodata)
dup.coords(df_geodata)
colnames(df_geodata$coords) <- c("Longitud", "Latitud")
plot(df_geodata)
plot(df_geodata, trend="1st")
pal <- colorRampPalette(c("lightblue","deepskyblue","blue","navy"))(100)
col_idx <- as.integer(cut(df$Precipitaciones, breaks = 100))
plot(df$Longitud, df$Latitud,
pch = 21, bg = pal[col_idx], col="black",
xlab = "Longitud", ylab = "Latitud", main = "Puntos y Precipitaciones",
asp = 1)
legend("topright", legend = c("Baja", "Media", "Alta"),
fill = c(pal[10], pal[50], pal[90]), bty="n")
# ---- Exploración de tendencias espaciales ----
par(mfrow = c(1,2))
# Scatter Longitud vs Precipitaciones
plot(df$Longitud, df$Precipitaciones,
pch = 10, col = "blue",
main = "Longitud vs Precipitaciones",
xlab = "Longitud", ylab = "Precipitación (mm/año)")
abline(lm(Precipitaciones ~ Longitud, data = df), col = "red", lwd = 2)
# Scatter Latitud vs Precipitaciones
plot(df$Latitud, df$Precipitaciones,
pch = 20, col = "darkgreen",
main = "Latitud vs Precipitaciones",
xlab = "Latitud", ylab = "Precipitación (mm/año)")
abline(lm(Precipitaciones ~ Latitud, data = df), col = "red", lwd = 2)
par(mfrow = c(1,1))
# Modelos lineales de tendencia
m_lon <- lm(Precipitaciones ~ Longitud, data = df)
m_lat <- lm(Precipitaciones ~ Latitud, data = df)
summary(m_lon)
summary(m_lat)
# ---- Superficie de tendencia (modelo espacial global) ----
# Ajuste polinómico 1er orden: Precip = a + bX + cY
m_trend <- lm(Precipitaciones ~ Longitud + Latitud, data = df)
summary(m_trend)
lon_seq <- seq(min(df$Longitud), max(df$Longitud), length.out = 100)
lat_seq <- seq(min(df$Latitud), max(df$Latitud), length.out = 100)
grid <- expand.grid(Longitud = lon_seq, Latitud = lat_seq)
grid$pred <- predict(m_trend, newdata = grid)
# Mapa de la superficie de tendencia
z <- matrix(grid$pred, nrow = 100, ncol = 100)
filled.contour(lon_seq, lat_seq, z,
color.palette = colorRampPalette(brewer.pal(9, "YlGnBu")),
xlab = "Longitud", ylab = "Latitud",
main = "Superficie de tendencia (modelo lineal)",
plot.axes = {
axis(1); axis(2)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
filled.contour(lon_seq, lat_seq, z,
color.palette = colorRampPalette(brewer.pal(9, "YlGnBu")),
xlab = "Longitud", ylab = "Latitud",
main = "Superficie de tendencia (modelo lineal)",
plot.axes = {
axis(1); axis(2)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
text(df$Longitud, df$Latitud,
labels = round(df$Precipitaciones,0), cex=0.7, pos=3)
},
asp = 1)
# La superficie de tendencia de primer orden evidencia un gradiente espacial en sentido oeste–este, con valores crecientes de precipitación hacia el este. Este patrón sugiere la presencia de una tendencia lineal global, de intensidad moderada, que deberá considerarse al momento de ajustar el modelo geoestadístico.
plot_ly(df, x = ~Longitud, y = ~Latitud, z = ~Precipitaciones,
type = "scatter3d", mode = "markers",
marker = list(size = 4, color = "blue")) %>%
add_surface(x = lon_seq, y = lat_seq, z = matrix(grid$pred, 100, 100),
colorscale = "Blues", opacity = 0.5) %>%
layout(scene = list(
xaxis = list(title = "Longitud"),
yaxis = list(title = "Latitud"),
zaxis = list(title = "Precipitaciones")
))
# ---- Análisis de normalidad ----
# Tests estadísticos
shapiro <- shapiro.test(df$Precipitaciones)  # Shapiro-Wilk
cat("Shapiro-Wilk original W =", round(shapiro$statistic,3),
"p =", signif(shapiro$p.value,3), "\n")
cat("Asimetría ", skewness(df$Precipitaciones), "\n")   # asimetría
cat("Kurtosis ", kurtosis(df$Precipitaciones), "\n")   # curtosis
# Posibles Transformaciones
df$prec_log  <- ifelse(df$Precipitaciones > 0, log(df$Precipitaciones), NA)
df$prec_sqrt <- sqrt(df$Precipitaciones)
bc_trans <- powerTransform(df$Precipitaciones)
summary(bc_trans)
df$prec_bc <- bcPower(df$Precipitaciones, coef(bc_trans))
sh_log  <- shapiro.test(na.omit(df$prec_log))
sh_sqrt <- shapiro.test(df$prec_sqrt)
cat("Shapiro log  p =", signif(sh_log$p.value,3), "\n")
cat("Shapiro sqrt p =", signif(sh_sqrt$p.value,3), "\n")
# ---- Histogramas ----
par(mfrow=c(1,3))
hist(df$Precipitaciones, prob = TRUE,
main = "Histograma Ppts con curva normal",
ylab = "Frecuencia",
xlab = "Precipitación (mm/año)",
col = "lightblue",
border = "white")
lines(density(df$Precipitaciones, na.rm = TRUE),
col = "red", lwd = 2)
hist(df$prec_log, prob = TRUE,
main = "Histograma Ppts Log con curva normal",
ylab = "Frecuencia",
xlab = "Precipitación log (mm/año)",
col = "lightblue",
border = "white")
lines(density(df$prec_log, na.rm = TRUE),
col = "red", lwd = 2)
hist(df$prec_sqrt, prob = TRUE,
main = "Histograma PPts Sqrt con curva normal",
ylab = "Frecuencia",
xlab = "Precipitación sqrt (mm/año)",
col = "lightblue",
border = "white")
lines(density(df$prec_sqrt, na.rm = TRUE),
col = "red", lwd = 2)
# ---- QQ-plots ----
par(mfrow=c(1,3))
qqnorm(df$Precipitaciones, main="QQ-Plot Original")
qqline(df$Precipitaciones, col="red")
qqnorm(df$prec_log, main="QQ-Plot Log", ylab="log(precipitaciones)")
qqline(df$prec_log, col="red")
qqnorm(df$prec_sqrt, main="QQ-Plot Sqrt", ylab="sqrt(precipitaciones)")
qqline(df$prec_sqrt, col="red")
par(mfrow=c(1,1))
par(mfrow=c(1,2))
hist(df$Precipitaciones, prob = TRUE,
main = "Histograma Precipitaciones",
ylab = "Frecuencia",
xlab = "Precipitación (mm/año)",
col = "lightblue",
border = "white")
lines(density(df$Precipitaciones, na.rm = TRUE),
col = "red", lwd = 2)
qqnorm(df$Precipitaciones, main="QQ-Plot Precipitaciones")
qqline(df$Precipitaciones, col="red")
shapiro <- shapiro.test(df$prec_log)  # Shapiro-Wilk
cat("Shapiro-Wilk Log W =", round(shapiro$statistic,3),
"p =", signif(shapiro$p.value,3), "\n")
cat("Asimetría ", skewness(df$prec_log), "\n")
cat("Kurtosis ", kurtosis(df$prec_log), "\n")
shapiro <- shapiro.test(df$prec_sqrt)  # Shapiro-Wilk
cat("Shapiro-Wilk SQRT W =", round(shapiro$statistic,3),
"p =", signif(shapiro$p.value,3), "\n")
cat("Asimetría ", skewness(df$prec_sqrt), "\n")
cat("Kurtosis ", kurtosis(df$prec_sqrt), "\n")
shapiro <- shapiro.test(df$prec_bc)  # Shapiro-Wilk
cat("Shapiro-Wilk BCPower W =", round(shapiro$statistic,3),
"p =", signif(shapiro$p.value,3), "\n")
cat("Asimetría ", skewness(df$prec_bc), "\n")
cat("Kurtosis ", kurtosis(df$prec_bc), "\n")
get_results <- function(x, nombre){
x <- na.omit(x)
sh <- shapiro.test(x)
data.frame(
Transformacion = nombre,
W = round(sh$statistic, 3),
p_value = signif(sh$p.value, 3),
Asimetria = round(skewness(x), 3),
Curtosis = round(kurtosis(x), 3)
)
}
tabla_resumen <- rbind(
get_results(df$Precipitaciones, "Original"),
get_results(df$prec_log, "Log"),
get_results(df$prec_sqrt, "Sqrt"),
get_results(df$prec_bc, "Box-Cox")
)
print(tabla_resumen)
interp_ppt <- interp(x = df$Longitud,
y = df$Latitud,
z = df$Precipitaciones,
duplicate = "mean",
nx = 100, ny = 100)  # resolución
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar de Precipitaciones (mm/año)",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = TRUE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
interp_ppt <- interp(x = df$Longitud,
y = df$Latitud,
z = df$Precipitaciones,
duplicate = "mean",
nx = 100, ny = 100)  # resolución
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
levels = pretty(range(df$Precipitaciones), n = 10),
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar de Precipitaciones (mm/año)",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = TRUE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
interp_ppt <- interp(x = df$Longitud,
y = df$Latitud,
z = df$Precipitaciones,
duplicate = "mean",
nx = 100, ny = 100)  # resolución
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
levels = df$Precipitaciones,
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar de Precipitaciones (mm/año)",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = TRUE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
interp_ppt <- interp(x = df$Longitud,
y = df$Latitud,
z = df$Precipitaciones,
duplicate = "mean",
nx = 100, ny = 100)  # resolución
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
levels = pretty(range(df$Precipitaciones), n = 10),
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar de Precipitaciones (mm/año)",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = TRUE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
interp_ppt <- interp(x = df$Longitud,
y = df$Latitud,
z = df$Precipitaciones,
duplicate = "mean",
nx = 100, ny = 100)  # resolución
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
# levels = pretty(range(df$Precipitaciones), n = 10),
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar de Precipitaciones (mm/año)",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = TRUE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
interp_ppt <- interp(x = df$Longitud,
y = df$Latitud,
z = df$Precipitaciones,
duplicate = "mean",
nx = 100, ny = 100)  # resolución
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
# levels = pretty(range(df$Precipitaciones), n = 10),
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar de Precipitaciones (mm/año)",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = TRUE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 10)
interp_ppt <- interp(x = df$Longitud,
y = df$Latitud,
z = df$Precipitaciones,
duplicate = "mean",
nx = 100, ny = 100)  # resolución
filled.contour(interp_ppt,
color.palette = colorRampPalette(brewer.pal(10, "YlGnBu")),
# levels = pretty(range(df$Precipitaciones), n = 10),
xlab = "Longitud",
ylab = "Latitud",
main = "Distribución espacial preliminar de Precipitaciones (mm/año)",
plot.axes = {
axis(1); axis(2)
contour(interp_ppt, add = TRUE, drawlabels = TRUE, lwd = 0.5)
points(df$Longitud, df$Latitud, pch = 20, col = "black")
},
asp = 1)
